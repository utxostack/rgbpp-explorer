# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""CKB Script"""
type CkbScript {
  codeHash: String!
  hashType: String!
  args: String!
}

"""CKB XUDT Info"""
type CkbXUDTInfo {
  symbol: String!
  amount: Float!
  decimal: Int!
  typeHash: String!
}

"""CKB Cell Status"""
type CkbCellStatus {
  consumed: Boolean!
  txHash: String
  index: Float
}

"""CKB Cell"""
type CkbCell {
  txHash: String!
  index: Int!
  capacity: Float!
  type: CkbScript
  lock: CkbScript!
  xudtInfo: CkbXUDTInfo
  status: CkbCellStatus!
}

"""CKB Address"""
type CkbAddress {
  address: String!
  shannon: Float!
  transactionsCount: Float!
  transactions(page: Float, pageSize: Float): [CkbTransaction!]!
}

"""CKB Block"""
type CkbBlock {
  version: Int!
  hash: String!
  number: Int!
  timestamp: Timestamp!
  transactionsCount: Int!
  totalFee: Float!
  miner: CkbAddress!
  reward: Float!
  transactions: [CkbTransaction!]!
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

"""CKB Transaction"""
type CkbTransaction {
  isCellbase: Boolean!
  blockNumber: Float!
  hash: String!
  fee: Float!
  feeRate: Float!
  size: Float!
  inputs: [CkbCell!]!
  outputs: [CkbCell!]!
  block: CkbBlock!
  confirmed: Boolean!
  confirmations: Float!
}

"""CKB Fees"""
type CkbFees {
  fast: Float!
  slow: Float!
  average: Float!
}

"""CKB ChainInfo"""
type CkbChainInfo {
  tipBlockNumber: Float!
  transactionsCountIn24Hours: Float!
  fees: CkbFees!
}

"""Rgbpp Address"""
type RgbppAddress {
  address: String!
  utxosCount: Float!
  cellsCount: Float!
}

"""Bitcoin Address"""
type BitcoinAddress {
  address: String!
  satoshi: Float!
  pendingSatoshi: Float!
  transactionsCount: Float!
  transactions(afterTxid: String): [BitcoinTransaction!]!
  rgbpp: RgbppAddress!
}

"""Bitcoin Output Spend Status"""
type BitcoinOutputStatus {
  spent: Boolean!
  txid: String
  vin: Float
}

"""Bitcoin Output"""
type BitcoinOutput {
  txid: String!
  vout: Float!
  scriptpubkey: String!
  scriptpubkeyAsm: String!
  scriptpubkeyType: String!
  scriptpubkeyAddress: String
  value: Float!
  address: BitcoinAddress
  status: BitcoinOutputStatus!
}

"""Bitcoin Input"""
type BitcoinInput {
  txid: String!
  vout: Float!
  prevout: BitcoinOutput
  scriptsig: String!
  scriptsigAsm: String!
  isCoinbase: Boolean!
  sequence: Float!
}

"""Bitcoin Transaction"""
type BitcoinTransaction {
  blockHeight: Float!
  blockHash: String!
  txid: String!
  version: Int!
  vin: [BitcoinInput!]!
  vout: [BitcoinOutput!]!
  size: Float!
  locktime: Timestamp!
  weight: Float!
  fee: Float!
  feeRate: Float!
  confirmed: Boolean!
  confirmations: Float!
}

"""RGB++ Transaction"""
type RgbppTransaction {
  ckbTxHash: String!
  btcTxid: String
  leapDirection: LeapDirection
  blockNumber: Int!
  timestamp: Timestamp!
  ckbTransaction: CkbTransaction
  btcTransaction: BitcoinTransaction
}

enum LeapDirection {
  LeapIn
  LeapOut
  Within
}

"""RGB++ latest transaction list"""
type RgbppLatestTransactionList {
  txs: [RgbppTransaction!]!
  total: Int!
  pageSize: Int!
}

"""RGB++ Coin"""
type RgbppCoin {
  name: String!
  description: String
  symbol: String!
  decimal: Float!
  icon: String
  typeHash: String!
  typeScript: CkbScript!
  holdersCount: Int!
  h24CkbTransactionsCount: Int!
  totalAmount: Float!
  issuer: String!
  deployedAt: Timestamp!
  transactions(page: Int, pageSize: Int): [RgbppTransaction!]!
}

"""RGB++ Coin List"""
type RgbppCoinList {
  coins: [RgbppCoin!]!
  total: Int!
  pageSize: Int!
}

"""RGB++ Coin"""
type RgbppStatistic {
  transactionsCount: Float!
  holdersCount: Float!
}

"""Bitcoin Fees"""
type BitcoinFees {
  fastest: Float!
  halfHour: Float!
  hour: Float!
  economy: Float!
  minimum: Float!
}

"""Bitcoin ChainInfo"""
type BitcoinChainInfo {
  tipBlockHeight: Float!
  tipBlockHash: String!
  difficulty: Float!
  transactionsCountIn24Hours: Float!
  fees: BitcoinFees!
}

"""Fee Rate Range"""
type FeeRateRange {
  min: Float!
  max: Float!
}

"""Bitcoin Block"""
type BitcoinBlock {
  id: String!
  height: Float!
  version: Int!
  timestamp: Timestamp!
  size: Float!
  weight: Float!
  bits: Float!
  difficulty: Float!
  miner: BitcoinAddress!
  reward: Float!
  totalFee: Float!
  feeRateRange: FeeRateRange!
  transactionsCount: Float!
  transactions(
    """For pagination, must be a multiplication of 25"""
    startIndex: Float
  ): [BitcoinTransaction!]!
}

type Query {
  ckbChainInfo: CkbChainInfo!
  ckbBlock(heightOrHash: String!): CkbBlock!
  ckbTransaction(txHash: String!): CkbTransaction
  ckbAddress(address: String!): CkbAddress
  btcChainInfo: BitcoinChainInfo!
  btcBlock(hashOrHeight: String!): BitcoinBlock!
  btcTransaction(txid: String!): BitcoinTransaction
  btcAddress(address: String!): BitcoinAddress
  rgbppAddress(address: String!): RgbppAddress
  rgbppLatestTransactions(page: Int, pageSize: Int): RgbppLatestTransactionList!
  rgbppTransaction(txidOrTxHash: String!): RgbppTransaction
  rgbppCoins(page: Int, pageSize: Int): RgbppCoinList!
  rgbppCoin(typeHash: String!): RgbppCoin!
  rgbppStatistic: RgbppStatistic!
}