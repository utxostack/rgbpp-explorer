services:
  explorer-backend:
    restart: unless-stopped
    build:
      context: .
      args:
        - GIT_BRANCH=${GIT_BRANCH}
    ports:
      - '3000:3000'
    depends_on:
      redis-cache:
        condition: service_started
      redis-queue:
        condition: service_started
      postgres:
        condition: service_healthy
    env_file:
      - ./backend/.env
    deploy:
      resources:
        limits:
          memory: 4096M
    networks:
      - internal

  redis-cache:
    # https://github.com/docker-library/redis/blob/b77450d/7.4/alpine/Dockerfile
    image: redis:7-alpine
    restart: unless-stopped
    command: /usr/local/etc/redis/redis.conf
    volumes:
      # Redis' WORKDIR is /data
      - redis-cache-data:/data
      - ./backend/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - internal

  redis-queue:
    # https://github.com/docker-library/redis/blob/b77450d/7.4/alpine/Dockerfile
    image: redis:7-alpine
    restart: unless-stopped
    command: /usr/local/etc/redis/redis.conf
    volumes:
      # Redis' WORKDIR is /data
      - redis-queue-data:/data
      - ./backend/redis-queue.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - internal

  postgres:
    image: postgres:13
    restart: unless-stopped
    env_file:
      # Need POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB to be set in .env
      - ./backend/.env
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    networks:
      - internal

volumes:
  redis-cache-data:
  redis-queue-data:
  postgres_volume:

networks:
  internal:
    driver: bridge
